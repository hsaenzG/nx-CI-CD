Pipeline


name: Develop CI - On Push to origin/main

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: Testing Application and Creating build artifact
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      affected_apps: ${{ steps.get-affected-apps.outputs.affected_apps }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          check-latest: true 
     

      - name: Getting yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }} -yarn-

      - name: Installing Dependencies
        run: yarn install --prefer-offline

      - name: Derive appropiate SHAs for base and head for `nx affected`commands
        uses: nrwl/nx-set-shas@v3
      
      - name: Running lint
        run: npx nx affected --target=lint --parallel=3

      - name: Running tests
        run: npx nx affected --target=test --parallel=3 --ci --code-coverage
        
      - name: Building app
        run: npx nx affected --target=build --parallel=3 

      - name: Get affected apps
        id: get-affected-apps
        run: |
          echo "::set-output name=affected_apps::$(./node_modules/.bin/nxaffected:apps --plain)"

      - name: Saving app1 build as artifact
        if: ${{ contains( steps.get-affected-apps.outputs.affected_apps,'app1') }}
        uses: actions/upload-artifact@v2
        with:
          name: app1-artifact
          path: dist/apps/app1
